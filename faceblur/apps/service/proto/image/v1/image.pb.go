// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.19.4
// source: image/v1/image.proto

package imagepb

import (
	v1 "api/proto/common/image/v1"
	v11 "api/proto/common/page_navigation/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUploadURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUploadURLRequest) Reset() {
	*x = GetUploadURLRequest{}
	mi := &file_image_v1_image_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUploadURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadURLRequest) ProtoMessage() {}

func (x *GetUploadURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadURLRequest.ProtoReflect.Descriptor instead.
func (*GetUploadURLRequest) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{0}
}

type GetUploadURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Url     string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetUploadURLResponse) Reset() {
	*x = GetUploadURLResponse{}
	mi := &file_image_v1_image_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUploadURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadURLResponse) ProtoMessage() {}

func (x *GetUploadURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadURLResponse.ProtoReflect.Descriptor instead.
func (*GetUploadURLResponse) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{1}
}

func (x *GetUploadURLResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetUploadURLResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type SubmitImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image *v1.CreateImage `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *SubmitImageRequest) Reset() {
	*x = SubmitImageRequest{}
	mi := &file_image_v1_image_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitImageRequest) ProtoMessage() {}

func (x *SubmitImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitImageRequest.ProtoReflect.Descriptor instead.
func (*SubmitImageRequest) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{2}
}

func (x *SubmitImageRequest) GetImage() *v1.CreateImage {
	if x != nil {
		return x.Image
	}
	return nil
}

type SubmitImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string    `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Image   *v1.Image `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *SubmitImageResponse) Reset() {
	*x = SubmitImageResponse{}
	mi := &file_image_v1_image_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitImageResponse) ProtoMessage() {}

func (x *SubmitImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitImageResponse.ProtoReflect.Descriptor instead.
func (*SubmitImageResponse) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{3}
}

func (x *SubmitImageResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SubmitImageResponse) GetImage() *v1.Image {
	if x != nil {
		return x.Image
	}
	return nil
}

type ListImagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image          *v1.CreateImage            `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	PageNavigation *v11.PageNavigationRequest `protobuf:"bytes,2,opt,name=page_navigation,json=pageNavigation,proto3" json:"page_navigation,omitempty"`
}

func (x *ListImagesRequest) Reset() {
	*x = ListImagesRequest{}
	mi := &file_image_v1_image_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesRequest) ProtoMessage() {}

func (x *ListImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesRequest.ProtoReflect.Descriptor instead.
func (*ListImagesRequest) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{4}
}

func (x *ListImagesRequest) GetImage() *v1.CreateImage {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *ListImagesRequest) GetPageNavigation() *v11.PageNavigationRequest {
	if x != nil {
		return x.PageNavigation
	}
	return nil
}

type ListImagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version        string                      `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Images         []*v1.Image                 `protobuf:"bytes,2,rep,name=images,proto3" json:"images,omitempty"`
	PageNavigation *v11.PageNavigationResponse `protobuf:"bytes,3,opt,name=page_navigation,json=pageNavigation,proto3" json:"page_navigation,omitempty"`
}

func (x *ListImagesResponse) Reset() {
	*x = ListImagesResponse{}
	mi := &file_image_v1_image_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesResponse) ProtoMessage() {}

func (x *ListImagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_image_v1_image_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesResponse.ProtoReflect.Descriptor instead.
func (*ListImagesResponse) Descriptor() ([]byte, []int) {
	return file_image_v1_image_proto_rawDescGZIP(), []int{5}
}

func (x *ListImagesResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ListImagesResponse) GetImages() []*v1.Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *ListImagesResponse) GetPageNavigation() *v11.PageNavigationResponse {
	if x != nil {
		return x.PageNavigation
	}
	return nil
}

var File_image_v1_image_proto protoreflect.FileDescriptor

var file_image_v1_image_proto_rawDesc = []byte{
	0x0a, 0x14, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6c, 0x75, 0x72,
	0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x28, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61,
	0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52,
	0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x42, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x51, 0x0a, 0x12,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22,
	0x66, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x35, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66,
	0x61, 0x63, 0x65, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x62, 0x0a, 0x0f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x76, 0x69, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x76,
	0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xcc,
	0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x37, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x63, 0x0a, 0x0f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x76, 0x69, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x86, 0x03,
	0x0a, 0x0c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x84,
	0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x12,
	0x26, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6c,
	0x75, 0x72, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31,
	0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2d, 0x75, 0x72,
	0x6c, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x79, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x25, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6c, 0x75, 0x72, 0x2e,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x66, 0x61,
	0x63, 0x65, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10,
	0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x12, 0x74, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x24,
	0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6c, 0x75, 0x72, 0x2e,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x16, 0x5a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_image_v1_image_proto_rawDescOnce sync.Once
	file_image_v1_image_proto_rawDescData = file_image_v1_image_proto_rawDesc
)

func file_image_v1_image_proto_rawDescGZIP() []byte {
	file_image_v1_image_proto_rawDescOnce.Do(func() {
		file_image_v1_image_proto_rawDescData = protoimpl.X.CompressGZIP(file_image_v1_image_proto_rawDescData)
	})
	return file_image_v1_image_proto_rawDescData
}

var file_image_v1_image_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_image_v1_image_proto_goTypes = []any{
	(*GetUploadURLRequest)(nil),        // 0: faceblur.image.v1.GetUploadURLRequest
	(*GetUploadURLResponse)(nil),       // 1: faceblur.image.v1.GetUploadURLResponse
	(*SubmitImageRequest)(nil),         // 2: faceblur.image.v1.SubmitImageRequest
	(*SubmitImageResponse)(nil),        // 3: faceblur.image.v1.SubmitImageResponse
	(*ListImagesRequest)(nil),          // 4: faceblur.image.v1.ListImagesRequest
	(*ListImagesResponse)(nil),         // 5: faceblur.image.v1.ListImagesResponse
	(*v1.CreateImage)(nil),             // 6: faceblur.common.image.v1.CreateImage
	(*v1.Image)(nil),                   // 7: faceblur.common.image.v1.Image
	(*v11.PageNavigationRequest)(nil),  // 8: faceblur.common.page_navigation.v1.PageNavigationRequest
	(*v11.PageNavigationResponse)(nil), // 9: faceblur.common.page_navigation.v1.PageNavigationResponse
}
var file_image_v1_image_proto_depIdxs = []int32{
	6, // 0: faceblur.image.v1.SubmitImageRequest.image:type_name -> faceblur.common.image.v1.CreateImage
	7, // 1: faceblur.image.v1.SubmitImageResponse.image:type_name -> faceblur.common.image.v1.Image
	6, // 2: faceblur.image.v1.ListImagesRequest.image:type_name -> faceblur.common.image.v1.CreateImage
	8, // 3: faceblur.image.v1.ListImagesRequest.page_navigation:type_name -> faceblur.common.page_navigation.v1.PageNavigationRequest
	7, // 4: faceblur.image.v1.ListImagesResponse.images:type_name -> faceblur.common.image.v1.Image
	9, // 5: faceblur.image.v1.ListImagesResponse.page_navigation:type_name -> faceblur.common.page_navigation.v1.PageNavigationResponse
	0, // 6: faceblur.image.v1.ImageService.GetUploadURL:input_type -> faceblur.image.v1.GetUploadURLRequest
	2, // 7: faceblur.image.v1.ImageService.SubmitImage:input_type -> faceblur.image.v1.SubmitImageRequest
	4, // 8: faceblur.image.v1.ImageService.ListImages:input_type -> faceblur.image.v1.ListImagesRequest
	1, // 9: faceblur.image.v1.ImageService.GetUploadURL:output_type -> faceblur.image.v1.GetUploadURLResponse
	3, // 10: faceblur.image.v1.ImageService.SubmitImage:output_type -> faceblur.image.v1.SubmitImageResponse
	5, // 11: faceblur.image.v1.ImageService.ListImages:output_type -> faceblur.image.v1.ListImagesResponse
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_image_v1_image_proto_init() }
func file_image_v1_image_proto_init() {
	if File_image_v1_image_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_image_v1_image_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_image_v1_image_proto_goTypes,
		DependencyIndexes: file_image_v1_image_proto_depIdxs,
		MessageInfos:      file_image_v1_image_proto_msgTypes,
	}.Build()
	File_image_v1_image_proto = out.File
	file_image_v1_image_proto_rawDesc = nil
	file_image_v1_image_proto_goTypes = nil
	file_image_v1_image_proto_depIdxs = nil
}
