

import { JsonDecoder } from "ts.data.json";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v5.29.3
// source: common/image/v1/image.proto
/* eslint-disable */
export const protobufPackage = "faceblur.common.image.v1";
export interface CreateImage {
    objectName: string;
    uploadedAt: Date | undefined;
}
export interface Image {
    id: string;
    url: string;
    isProcessed: boolean;
    isFailed: boolean;
    createdAt: Date | undefined;
    updatedAt: Date | undefined;
    uploadedAt: Date | undefined;
}




export const CreateImageDecoder = JsonDecoder.object(
    {
		objectName: JsonDecoder.string,
		uploadedAt: JsonDecoder.nullable(JsonDecoder.string.map((stringDate) => { const parsedDate = new Date(stringDate); return isNaN(parsedDate.getTime()) ? null : parsedDate; })),
    },
    "CreateImage"
);

export const ImageDecoder = JsonDecoder.object(
    {
		id: JsonDecoder.string,
		url: JsonDecoder.string,
		isProcessed: JsonDecoder.boolean,
		isFailed: JsonDecoder.boolean,
		createdAt: JsonDecoder.nullable(JsonDecoder.string.map((stringDate) => { const parsedDate = new Date(stringDate); return isNaN(parsedDate.getTime()) ? null : parsedDate; })),
		updatedAt: JsonDecoder.nullable(JsonDecoder.string.map((stringDate) => { const parsedDate = new Date(stringDate); return isNaN(parsedDate.getTime()) ? null : parsedDate; })),
		uploadedAt: JsonDecoder.nullable(JsonDecoder.string.map((stringDate) => { const parsedDate = new Date(stringDate); return isNaN(parsedDate.getTime()) ? null : parsedDate; })),
    },
    "Image"
);




